#!/usr/bin/python -u
# The -u makes output unbuffered, so it will show up immediately
import sys
import socket
import select
import json
 
# pads the name with null bytes at the end
def pad(name):
        result = '\0' + name
        while len(result) < 108:
                result += '\0'
        return result
 
if __name__ == "__main__":
        id = sys.argv[1]
        LAN = sys.argv[2:]
        sockets = []
        root = id
        cost = 0

        # data structure for spanning tree
        
        # creates sockets and connects to them
        for x in range(len(LAN)):
                s = socket.socket(socket.AF_UNIX, socket.SOCK_SEQPACKET)
                s.connect(pad(LAN[x]))
                sockets.append(s)

        print "Bridge " + id + " starting up\n"

        def bpdu(msg):
                root = msg.root
                cost = msg.cost+1
                for s in sockets:
                    bpdu_message = {"source": id, "dest":'ffff', "type":'BPDU', "message": {"id" : id, "root": root, "cost": cost}}
                    s.send(json.dumps(bpdu_message))

        initial_message = {"id": id, "root": root, "cost": cost}
        bpdu(initial_message)
        # Main loop
        while True:
                # Calls select with all the sockets; change the timeout value (1)
                ready, ignore, ignore2 = select.select(sockets, [], [], 1)
 
                # Reads from each fo the ready sockets
                for x in ready:
                        data = x.recv(1500)
                        parsed_data = json.loads(data)
                        data_type = parsed_data["type"]

                        if data_type == 'BPDU':
                                data_message = parsed_data["message"]
                                bpdu(data_message)